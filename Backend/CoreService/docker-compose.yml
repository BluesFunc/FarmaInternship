services:
  

  
  frontend:
    image: farmacio-client:0.1
    ports:
      - "4200:80"
    networks:
      - backend
  
  core-app:
    image: farmacio-app:0.1
    env_file:
      - core-app.env
    depends_on:
      farmacio-core-database:
        condition: service_healthy
    ports:
      - '8000:8000'
    networks:
      - core
      - backend
      - statistic-net
  
  auth-app:
    image: farmacio-auth:0.1
    env_file:
      - ../AuthService/auth-app.env
    ports:
      - "5001:5001"
    
    networks:
      - backend
      - auth
  
  statistic-app:
    image: farmacio-statistic:0.1
    env_file:
      - ../AnalyticsService/statistic-app.env
    ports:
      - "9000:9000"

    networks:
      - backend
      - statistic-net
    
  users-database:
    image: sha256:2b41d0be82839692f678a709e8b7dd6106ee4776b0e70759c59b067730058b04
    env_file:
      - ../AuthService/auth-app.env
    
    volumes:
      - userDB-volume:/var/opt/mssql
    ports:
      - "1433:1433"
    networks:
      - auth

  statistic-database:
    image: sha256:dc5625b96e2f902e639ace95673207cebf11e5f69cd8031451f023238339f64a
    env_file:
      - ../AnalyticsService/statistic-app.env
    ports:
      - "27017:27017"
    volumes:
      - statistic_db_volume:/data/db
    networks:
      - statistic-net
  
  
  
  farmacio-core-database:
    image: postgres:16
    volumes:
      - core_db_volume:/var/lib/postgresql/data
    env_file:
      - core-app.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U aleks -d farmacio" ]
      interval: 2s
      timeout: 2s
      retries: 20
    ports:
      - '5434:5432'
    networks:
      - core
  
  statistic-broker1:
    image: confluentinc/cp-kafka:8.0.0
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@statistic-broker1:29093,2@statistic-broker2:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://statistic-broker1:29092,CONTROLLER://statistic-broker1:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://statistic-broker1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      CLUSTER_ID: EmptNWtoR4GGWx-BH6nGLQ
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - "29092:29092"
      - "29093:29093"
    volumes:
      - statistic-message-volume1:/var/lib/kafka/data
    networks:
      - statistic-net
  
  statistic-broker2:
    image: confluentinc/cp-kafka:8.0.0
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_BROKER_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@statistic-broker1:29093,2@statistic-broker2:29093
      KAFKA_LISTENERS: PLAINTEXT://statistic-broker2:29092,CONTROLLER://statistic-broker2:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://statistic-broker2:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      CLUSTER_ID: EmptNWtoR4GGWx-BH6nGLQ
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
    ports:
      - "29094:29092"
      - "29095:29093"
    volumes:
      - statistic-message-volume2:/var/lib/kafka/data
    networks:
      - statistic-net
  
  
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=statistic-broker1:29092,statistic-broker2:29092
    depends_on:
      - statistic-broker1
      - statistic-broker2
    networks:
      - statistic-net
  
  
  elasticsearch:
    image: elasticsearch:8.18.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      retries: 3
    networks:
      - core
  
  kibana:
    image: kibana:8.18.0
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5601" ]
      interval: 30s
      retries: 3
    networks:
      - core
  
  logstash:
    image: logstash:8.18.0
    container_name: logstash
    ports:
      - "8080:8080"
      - "9600:9600"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9600/_node/pipelines || exit 1" ]
      interval: 30s
      retries: 3
    networks:
      - core


networks:
  core:
    driver: bridge
  backend:
    driver: bridge
  statistic-net:
    driver: bridge
  auth:
    driver: bridge

volumes:
  userDB-volume:
  esdata:
  statistic_db_volume:
  core_db_volume:
  statistic-message-volume1:
  statistic-message-volume2:
  